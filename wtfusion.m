%小波变换wt

function y= wtfusion(x1,x2,N,wname)

%函数功能：
%     函数x=wtfusion(x1,x2,N,wname)将两幅原图像x1,x2进行基于小波变换的图像融合，得到融合后的图像y
%     近似分量采用加权平均的融合规则，各细节分量采用基于区域特性量测的融合规则
%输入参数：
%     x1----输入原图像1
%     x2----输入原图像2
%     N----小波分解的层数
%     wname----小波基函数
%输出参数：
%     y----原图像融合后得到的图像
%-----------------------------------------------------------------%

x1=double(x1);                   %将uint8的图像数据类型转换成double型进行数据处理
x2=double(x2);

 %将原图像x1,x2分别进行N层小波分解，wname为小波基函数，
 %C为各层分解系数,S为各层分解系数长度,也就是大小. 
 %C的结构:c=[A(N)|H(N)|V(N)|D(N)|H(N-1)|V(N-1)|D(N-1)|H(N-2)|V(N-2)|D(N-2)|...|H(1)|V(1)|D(1)]
 %A(N)代表第N层低频系数,H(N)|V(N)|D(N)代表第N层高频系数,分别是水平,垂直,对角高频
 %
 %S是一个(N+2)行、2列的结构是储存各层分解系数长度的,即第一行是A(N)的长度（其实是A(N)的原矩阵的行数和列数）,
 %第二行是H(N)|V(N)|D(N)|的长度,第三行是H(N-1)|V(N-1)|D(N-1)的长度,
 %倒数第二行是H(1)|V(1)|D(1)长度,最后一行是X的长度(大小)

[C1,S1]=wavedec2(x1,N,wname);    % 函数功能：实现图像的小波分解。wname是小波基的名称。N是分解的层数.
[C2,S2]=wavedec2(x2,N,wname);    

A1=appcoef2(C1,S1,wname,N);            %函数功能：离散小波变换低频部分系数提取
A2=appcoef2(C2,S2,wname,N);             %提取出小波分解的近似分量。低频只有一个，就是A(N)。其余的都是高频。
A=0.5*A1+0.5*A2;                       %低频分量的融合规则采用加权平均的方法

%figure
%imshow(uint8(A))

%仿照matlab中近似分量和细节分量的存储方式，把融合后的近似分量和细节分量转成行向量，然后存入向量C中
%这样做是为了方便重构原图像

a=reshape(A,1,S1(1,1)*S1(1,2));        %将A转换成行向量.
C=a;

for i=N:-1:1                           %循环从第N层到第1层    
    [H1,V1,D1]=detcoef2('all',C1,S1,i);       %小波变换高频部分提取
    [H2,V2,D2]=detcoef2('all',C2,S2,i);        %提取出小波分解的各层细节分量
    H=f(H1,H2);                           
    V=f(V1,V2);    %高频分量的融合规则：采用基于区域特性量测的融合规则。可以选择不同的融合规则。
    D=f(D1,D2);
    h=reshape(H,1,S1(N+2-i,1)*S1(N+2-i,2));%分别将融合后的细节分量转成行向量，并存入行向量C中
    v=reshape(V,1,S1(N+2-i,1)*S1(N+2-i,2));
    d=reshape(D,1,S1(N+2-i,1)*S1(N+2-i,2));
    C=[C,h,v,d];
end

S=S1;
y=waverec2(C,S,wname);      %重构原图像
%figure(1);imshow(uint8(y));title('基于小波变换的融合图像')